// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Database;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(DarkforgeDBContext))]
    [Migration("20240209194839_DBMigration")]
    partial class DBMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.BMP", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("BPerPixel")
                        .HasColumnType("int")
                        .HasColumnName("BPP");

                    b.Property<long>("ColoursUsed")
                        .HasColumnType("bigint")
                        .HasColumnName("ColoursUsed");

                    b.Property<long>("Compression")
                        .HasColumnType("bigint")
                        .HasColumnName("Compression");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Data");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("FileSize");

                    b.Property<long>("HeaderSize")
                        .HasColumnType("bigint")
                        .HasColumnName("HeaderSize");

                    b.Property<int>("Height")
                        .HasColumnType("int")
                        .HasColumnName("Height");

                    b.Property<long>("ImgSize")
                        .HasColumnType("bigint")
                        .HasColumnName("ImgSize");

                    b.Property<long>("ImportantColours")
                        .HasColumnType("bigint")
                        .HasColumnName("ImportantColours");

                    b.Property<int>("Magic")
                        .HasColumnType("int")
                        .HasColumnName("Magic");

                    b.Property<long>("Offset")
                        .HasColumnType("bigint")
                        .HasColumnName("Offset");

                    b.Property<int>("Planes")
                        .HasColumnType("int")
                        .HasColumnName("Planes");

                    b.Property<long>("Reserved")
                        .HasColumnType("bigint")
                        .HasColumnName("Reserved");

                    b.Property<int>("Width")
                        .HasColumnType("int")
                        .HasColumnName("Width");

                    b.Property<int>("XPixelPerm")
                        .HasColumnType("int")
                        .HasColumnName("XPixelPerm");

                    b.Property<int>("YPixelPerm")
                        .HasColumnType("int")
                        .HasColumnName("YPixelPerm");

                    b.HasKey("Id");

                    b.ToTable("BMP");
                });

            modelBuilder.Entity("backend.Models.PGA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Data");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.HasKey("Id");

                    b.ToTable("PGA");
                });

            modelBuilder.Entity("backend.Models.PLT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Data");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.HasKey("Id");

                    b.ToTable("PLT");
                });

            modelBuilder.Entity("backend.Models.RAF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Frames")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Frames");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.Property<string>("PGA_Ids")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PGAs");

                    b.Property<string>("PLT_Ids")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PLTs");

                    b.HasKey("Id");

                    b.ToTable("RAF");
                });

            modelBuilder.Entity("backend.Models.RPF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Animated")
                        .HasColumnType("tinyint")
                        .HasColumnName("Animated");

                    b.Property<byte>("CLUT")
                        .HasColumnType("tinyint")
                        .HasColumnName("CLUT");

                    b.Property<byte>("Height")
                        .HasColumnType("tinyint")
                        .HasColumnName("Height");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.Property<int>("PGA_Id")
                        .HasColumnType("int")
                        .HasColumnName("PGA");

                    b.Property<int>("PLT_Id")
                        .HasColumnType("int")
                        .HasColumnName("PLT");

                    b.Property<int>("RAF_Id")
                        .HasColumnType("int")
                        .HasColumnName("RAF");

                    b.Property<byte>("Width")
                        .HasColumnType("tinyint")
                        .HasColumnName("Width");

                    b.HasKey("Id");

                    b.ToTable("RPF");
                });
#pragma warning restore 612, 618
        }
    }
}
